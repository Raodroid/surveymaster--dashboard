import { UserPayload } from '@/redux/user';
import { IQuestion, IQuestionVersion } from '@/type/question-bank';
import { ISurvey, ISurveyVersionBaseDto } from '@/type/survey';
import { IProject } from '@/type/project';

export enum SurveyHistoryType {
  SURVEY_CREATED = 'SURVEY_CREATED',
  SURVEY_DELETED = 'SURVEY_DELETED',
  SURVEY_RESTORED = 'SURVEY_RESTORED',
  SURVEY_VERSION_CREATED = 'SURVEY_VERSION_CREATED',
  SURVEY_VERSION_DELETED = 'SURVEY_VERSION_DELETED',
  SURVEY_VERSION_RESTORED = 'SURVEY_VERSION_RESTORED',
  SURVEY_VERSION_CHANGED_STATUS = 'SURVEY_VERSION_CHANGED_STATUS',
  SURVEY_VERSION_UPDATED = 'SURVEY_VERSION_UPDATED',
  SURVEY_VERSION_CHANGED_NAME = 'SURVEY_VERSION_CHANGED_NAME',
  SURVEY_VERSION_ADDED_REMARK = 'SURVEY_VERSION_ADDED_REMARK',
  SURVEY_VERSION_ADDED_BLOCK_ELEMENT = 'SURVEY_VERSION_ADDED_BLOCK_ELEMENT',
  SURVEY_VERSION_DELETED_BLOCK_ELEMENT = 'SURVEY_VERSION_DELETED_BLOCK_ELEMENT',
  BLOCK_ELEMENT_ADDED_SURVEY_QUESTION = 'BLOCK_ELEMENT_ADDED_SURVEY_QUESTION',
  BLOCK_ELEMENT_DELETED_SURVEY_QUESTION = 'BLOCK_ELEMENT_DELETED_SURVEY_QUESTION',
  BLOCK_ELEMENT_REORDERED_SURVEY_QUESTIONS = 'BLOCK_ELEMENT_REORDERED_SURVEY_QUESTIONS',
  SURVEY_QUESTION_ADDED_REMARK = 'SURVEY_QUESTION_ADDED_REMARK',
  SURVEY_VERSION_ADDED_EMBEDDED_ELEMENT = 'SURVEY_VERSION_ADDED_EMBEDDED_ELEMENT',
  SURVEY_VERSION_DELETED_EMBEDDED_ELEMENT = 'SURVEY_VERSION_DELETED_EMBEDDED_ELEMENT',
  EMBEDDED_ELEMENT_ADDED_EMBEDDED_DATA = 'EMBEDDED_ELEMENT_ADDED_EMBEDDED_DATA',
  EMBEDDED_ELEMENT_DELETED_EMBEDDED_DATA = 'EMBEDDED_ELEMENT_DELETED_EMBEDDED_DATA',
  EMBEDDED_ELEMENT_CHANGED_EMBEDDED_DATA = 'EMBEDDED_ELEMENT_CHANGED_EMBEDDED_DATA',
  SURVEY_VERSION_ADDED_END_SURVEY_ELEMENT = 'SURVEY_VERSION_ADDED_END_SURVEY_ELEMENT',
  SURVEY_VERSION_DELETED_END_SURVEY_ELEMENT = 'SURVEY_VERSION_DELETED_END_SURVEY_ELEMENT',
  SURVEY_VERSION_ADDED_BRANCH_ELEMENT = 'SURVEY_VERSION_ADDED_BRANCH_ELEMENT',
  SURVEY_VERSION_DELETED_BRANCH_ELEMENT = 'SURVEY_VERSION_DELETED_BRANCH_ELEMENT',
  BRANCH_ELEMENT_ADDED_BRANCH_LOGIC = 'BRANCH_ELEMENT_ADDED_BRANCH_LOGIC',
  BRANCH_ELEMENT_DELETED_BRANCH_LOGIC = 'BRANCH_ELEMENT_DELETED_BRANCH_LOGIC',
}

export enum QuestionHistoryType {
  QUESTION_CREATED = 'QUESTION_CREATED',
  QUESTION_DELETED = 'QUESTION_DELETED',
  QUESTION_RESTORED = 'QUESTION_RESTORED',
  QUESTION_VERSION_CREATED = 'QUESTION_VERSION_CREATED',
  QUESTION_VERSION_RESTORED = 'QUESTION_VERSION_RESTORED',
  QUESTION_VERSION_DELETED = 'QUESTION_VERSION_DELETED',
  QUESTION_VERSION_CHANGED_STATUS = 'QUESTION_VERSION_CHANGED_STATUS',
  QUESTION_VERSION_UPDATED = 'QUESTION_VERSION_UPDATED',
  QUESTION_VERSION_CHANGED_TYPE = 'QUESTION_VERSION_CHANGED_TYPE',
  QUESTION_VERSION_CHANGED_TITLE = 'QUESTION_VERSION_CHANGED_TITLE',
  QUESTION_VERSION_CHANGED_DATE_FORMAT = 'QUESTION_VERSION_CHANGED_DATE_FORMAT',
  QUESTION_VERSION_CHANGED_TIME_FORMAT = 'QUESTION_VERSION_CHANGED_TIME_FORMAT',
  QUESTION_VERSION_CHANGED_NUMBER_MIN = 'QUESTION_VERSION_CHANGED_NUMBER_MIN',
  QUESTION_VERSION_CHANGED_NUMBER_MAX = 'QUESTION_VERSION_CHANGED_NUMBER_MAX',
  QUESTION_VERSION_CHANGED_MAX_DECIMAL = 'QUESTION_VERSION_CHANGED_MAX_DECIMAL',
  QUESTION_VERSION_CHANGED_NUMBER_STEP = 'QUESTION_VERSION_CHANGED_NUMBER_STEP',
  QUESTION_VERSION_CHANGED_NUMBER_MIN_LABEL = 'QUESTION_VERSION_CHANGED_NUMBER_MIN_LABEL',
  QUESTION_VERSION_CHANGED_NUMBER_MAX_LABEL = 'QUESTION_VERSION_CHANGED_NUMBER_MAX_LABEL',
  QUESTION_VERSION_CHANGED_DATA_MATRIX = 'QUESTION_VERSION_CHANGED_DATA_MATRIX',
  QUESTION_VERSION_ADDED_OPTION = 'QUESTION_VERSION_ADDED_OPTION',
  QUESTION_VERSION_DELETED_OPTION = 'QUESTION_VERSION_DELETED_OPTION',
  QUESTION_VERSION_CHANGED_OPTION = 'QUESTION_VERSION_CHANGED_OPTION',
  QUESTION_VERSION_REORDERED_OPTIONS = 'QUESTION_VERSION_REORDERED_OPTIONS',
}

export type SurveyHistory = {
  createdAt: string;
  updatedAt: string;
  deletedAt: string;
  id: string;
  type: SurveyHistoryType;
  oldItem: ISurveyVersionBaseDto;
  newItem: ISurveyVersionBaseDto | ISurvey;
  // parent	{...}
  children?: Array<SurveyHistory>;
  createdBy: string;
  owner: UserPayload;
  project: IProject;
};

export type QuestionHistory = {
  createdAt: string;
  updatedAt: string;
  deletedAt: string;
  id: string;
  type: QuestionHistoryType;
  oldItem: IQuestionVersion;
  newItem: IQuestionVersion | IQuestion;
  // parent	{...}
  children?: Array<QuestionHistory>;
  createdBy: string;
  owner: UserPayload;
};
